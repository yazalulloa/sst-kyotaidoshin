package rates

import (
	"fmt"
	"kyotaidoshin/api"
	"kyotaidoshin/util"
	"strings"
)

templ Search(res TableResponse) {
	{{ hasWritePerm := api.HasPerms(ctx, api.RATES_WRITE) }}
	for _, item := range res.Results {
		<li
			id={ item.CardId }
			class={ "fade-me-in fade-me-out ",
            templ.KV("md:grid-cols-[3fr_1fr_1fr_1fr_3fr_1fr]", hasWritePerm),
            templ.KV("md:grid-cols-[3fr_1fr_1fr_1fr_3fr]", !hasWritePerm) }
		>
			<span>{ fmt.Sprint(*item.Item.ID) }</span>
			<div class="flex flex-row justify-center gap-2">
				<svg
					data-flag={ strings.ToLower(item.Item.FromCurrency) }
					x-bind:data-src="flags.get($el.getAttribute('data-flag'))"
					data-cache="21600"
					class="h-6 w-8"
				></svg>
				<div class="w-8">{ item.Item.FromCurrency }</div>
			</div>
			<span class="text-end">{ util.FormatFloat64(item.Item.Rate) }</span>
			<span>{ item.DateOfRate }</span>
			<span
				data-date={ fmt.Sprint(item.DateOfFile) }
				x-init="
					$el.innerHTML = new Date(parseInt($el.getAttribute('data-date')))
                                      //.toLocaleDateString()
                                     .toLocaleString()
                                     "
			></span>
			if hasWritePerm {
				@api.DeleteBtn(fmt.Sprintf(_PATH+"/%s", item.Key), item.CardId, templ.Attributes{"hx-include": "[name='currency_input'],[name='date_input']"})
			}
		</li>
	}
	if res.NextPageUrl != "" {
		@api.NextPageLi(res.NextPageUrl, templ.Attributes{})
	}
	@CountersView(res.Counters)
}

templ CountersView(counters Counters) {
	<div
		id="rates-counters"
		hidden="hidden"
		hx-swap-oob="true"
		data-total-count={ fmt.Sprint(counters.TotalCount) }
		if counters.QueryCount != nil {
			data-query-count={ fmt.Sprint(*counters.QueryCount) }
		}
		x-init="
	total = $el.getAttribute('data-total-count');
	query = $el.getAttribute('data-query-count');
	"
	></div>
}

templ Currencies(init string) {
	<div x-init={ init }></div>
}
