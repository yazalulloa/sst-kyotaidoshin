package reserveFunds

import (
	"fmt"
	"kyotaidoshin/api"
)

templ FormView(dto FormDto) {
	<div id="reserve-funds-list" hx-swap-oob="innerHTML">
		for _, item := range dto.Items {
			@ItemView(item)
		}
		<div
			data-building-key={ dto.Key }
			data-counter={ fmt.Sprint(len(dto.Items)) }
			x-init="
      		buildingKey = $el.getAttribute('data-building-key');
      		key = buildingKey
      		counter = parseInt($el.getAttribute('data-counter'));
      		$el.remove()
      		"
		></div>
	</div>
}

templ ItemView(item Item) {
	<li
		id={ item.CardId }
		if item.isUpdate != nil && *item.isUpdate {
			hx-swap-oob="true"
		}
		if item.UpdateParams != nil {
			data-update-params={ *item.UpdateParams }
			@click="$dispatch('event-reserve-fund-form-update', { params: $el.getAttribute('data-update-params') })"
		}
	>
		<div class="flex flex-col items-center gap-2 text-center">
			<span>{ item.Item.Name }</span>
			<span>{ fmt.Sprint(item.Item.Fund) }</span>
		</div>
		<div class="flex flex-row gap-4 justify-center">
			<div
				class={ "peer rounded-radius w-fit border px-2 py-1 text-xs font-medium tracking-wide ",
                                            					   templ.KV("border-success bg-success text-on-success dark:border-success dark:bg-success dark:text-on-success", item.Item.Active),
                                            					   templ.KV("border-danger bg-danger text-on-danger dark:border-danger dark:bg-danger dark:text-on-danger", !item.Item.Active) }
			>
				<span>{ fmt.Sprint(item.Item.Pay) }</span>
				if item.Item.Type == "PERCENTAGE" {
					<span>%</span>
				}
			</div>
		</div>
		<div class="flex justify-center">
			<div
				class={ "flex flex-col gap-2 justify-center peer rounded-radius w-fit border px-2 py-1 text-xs font-medium tracking-wide ",
                                                    					   templ.KV("border-success bg-success text-on-success dark:border-success dark:bg-success dark:text-on-success", item.Item.AddToExpenses),
                                                    					   templ.KV("border-danger bg-danger text-on-danger dark:border-danger dark:bg-danger dark:text-on-danger", !item.Item.AddToExpenses) }
			>
				<span>{ fmt.Sprint(item.Item.Expense) }</span>
				<span>{ fmt.Sprint(item.Item.ExpenseType) }</span>
			</div>
		</div>
		@api.DeleteBtn(fmt.Sprintf(_PATH+"/%s", item.Key), item.CardId, templ.Attributes{})
	</li>
}

templ FormResponseView(res FormResponse) {
	<div
		data-response-err={ res.errorStr }
		data-counter={ fmt.Sprint(res.counter) }
		x-init="
 		errMsg = $el.getAttribute('data-response-err');
  		counter = parseInt($el.getAttribute('data-counter'));

 		if (errMsg === '') {
 		  $dispatch('event-reserve-fund-form-reset');
 		 }
 		"
	></div>
	if res.item != nil {
		if res.item.isUpdate != nil {
			if *res.item.isUpdate {
				@ItemView(*res.item)
			} else {
				<div id="reserve-funds-list" hx-swap-oob="beforeend">
					@ItemView(*res.item)
				</div>
			}
		}
	}
}

templ DeleteResponse(counter int64) {
	<div
		id="reserve-funds-list"
		hx-swap-oob="beforeend"
	>
		<div
			hidden="hidden"
			data-counter={ fmt.Sprint(counter) }
			x-init="
        		counter = parseInt($el.getAttribute('data-counter'));
        		$el.remove()
        		"
		></div>
	</div>
}
