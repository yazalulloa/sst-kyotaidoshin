package bcv_bucket

import (
	"fmt"
	"kyotaidoshin/api"
)

templ Init() {
	@api.Base() {
		<ul
			hx-get={ _SEARCH }
			hx-trigger="load"
			hx-indicator=".htmx-indicator"
			hx-swap="innerHTML"
		></ul>
	}
}

templ Search(res TableResponse) {
	for _, item := range res.Results {
		<li
			id={ item.CardId }
			class="grid grid-cols-[4fr_1fr_3fr_3fr_2fr_1fr] gap-4 items-center text-center fade-me-in fade-me-out"
		>
			<a
				href={ templ.URL(item.Item.Url) }
				target="_blank"
				rel="noopener noreferrer"
				class="text-start"
			>
				{ item.Item.Name }
			</a>
			<span class="text-end">{ item.Item.SizeFormatted }</span>
			<span>{ item.Item.Etag }</span>
			<span
				data-date={ fmt.Sprint(item.Item.LastModified) }
				x-init="
      					$el.innerHTML = new Date(parseInt($el.getAttribute('data-date')))
                                            //.toLocaleDateString()
                                           .toLocaleString()
                                           "
			></span>

			if item.Item.Processed {
				<span class="rounded-radius w-fit border border-success bg-success px-2 py-1 text-xs font-medium text-on-success dark:border-success dark:bg-success dark:text-on-success">
					main.action.processed
				</span>
			} else {
				<span class="rounded-radius w-fit border border-danger bg-danger px-2 py-1 text-xs font-medium text-on-danger dark:border-danger dark:bg-danger dark:text-on-danger">
					main.action.processed
				</span>
			}
			<div class="flex flex-row gap-4 justify-center">
				<button
					type="button"
					class="whitespace-nowrap bg-transparent rounded-full border border-secondary p-1 text-sm font-medium tracking-wide text-secondary transition hover:opacity-75 text-center focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary active:opacity-100 active:outline-offset-0 disabled:opacity-75 disabled:cursor-not-allowed dark:border-secondary-dark dark:text-secondary-dark dark:focus-visible:outline-secondary-dark"
					hx-post={ fmt.Sprintf(_PATH+"/process/%s", item.Key) }
					hx-disabled-elt="this"
					hx-indicator=".htmx-indicator"
					hx-swap="none"
					hx-trigger="mousedown"
				>
					<svg data-src="/assets/images/process.svg" data-cache="21600" class="h-6 w-6"></svg>
				</button>
				@api.DeleteBtn(fmt.Sprintf(_PATH+"/%s", item.Key), item.CardId, templ.Attributes{})
			</div>
		</li>
	}

	@CountersView(res.TotalCount)
}

templ CountersView(total int) {
<div
		id="bcv-files-counters"
		hidden="hidden"
		hx-swap-oob="true"
		data-total-count={ fmt.Sprint(total) }
		x-init="
	total = $el.getAttribute('data-total-count');
	"
	></div>

}
